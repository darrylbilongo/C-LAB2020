{"ast":null,"code":"var _jsxFileName = \"C:\\\\DevWeb\\\\site\\\\C-LAB2020\\\\front-end\\\\src\\\\components\\\\Chat.js\";\nimport React, { Component } from \"react\";\nimport { socket } from '../../src/service/socket';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      messages: [],\n      currentUser: '',\n      user: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    axios.get('http://localhost:8080/users/' + id).then(res => {\n      this.setState({\n        user: res.data\n      });\n    });\n    const token = await localStorage.getItem('usertoken');\n    const decoded = jwt_decode(token);\n    this.setState({\n      currentUser: decoded\n    });\n    await axios.post('http://localhost:8080/messages/get/' + id, {\n      authorId: decoded.id\n    }).then(res => {\n      this.setState({\n        messages: res.data\n      });\n    });\n    socket.on(\"message\", msg => {\n      this.setState({\n        messages: [...this.state.messages, msg]\n      });\n    });\n  }\n\n  onChange(event) {\n    this.setState({\n      message: event.target.value\n    });\n  }\n\n  onClick() {\n    const {\n      id\n    } = this.props.match.params;\n\n    if (this.state.message !== \"\") {\n      socket.emit(\"message\", {\n        from: this.state.currentUser.id,\n        to: id,\n        message: this.state.message\n      });\n      this.setState({\n        message: \"\"\n      });\n    } else {\n      alert('Ajoutez un message');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      class: \"list-group-item active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Chat avec \", this.state.user.first_name), this.state.messages.length > 0 && this.state.messages.map(msg => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: msg.id,\n        className: \"list-group-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }\n      }, msg.message);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.message,\n      name: \"message\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \" Envoyer !\")));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/DevWeb/site/C-LAB2020/front-end/src/components/Chat.js"],"names":["React","Component","socket","axios","jwt_decode","Chat","constructor","props","state","message","messages","currentUser","user","onChange","bind","onClick","componentDidMount","id","match","params","get","then","res","setState","data","token","localStorage","getItem","decoded","post","authorId","on","msg","event","target","value","emit","from","to","alert","render","first_name","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { socket } from '../../src/service/socket';\r\nimport axios from 'axios'\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nclass Chat extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          message: '',\r\n          messages: [],\r\n          currentUser: '',\r\n          user: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onClick = this.onClick.bind(this)\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        const { id } = this.props.match.params\r\n\r\n\r\n        axios.get('http://localhost:8080/users/' + id)\r\n            .then((res) => {\r\n                this.setState({\r\n                    user: res.data\r\n                })\r\n        });\r\n\r\n        const token = await localStorage.getItem('usertoken');\r\n        const decoded = jwt_decode(token);\r\n\r\n        this.setState({\r\n            currentUser: decoded,\r\n        })\r\n\r\n        await axios.post('http://localhost:8080/messages/get/' + id, {\r\n            authorId : decoded.id\r\n        }).then(res => {\r\n            this.setState({\r\n                messages: res.data\r\n            })\r\n        })\r\n\r\n        socket.on(\"message\", msg =>{\r\n            this.setState({messages: [...this.state.messages, msg]})\r\n        })\r\n\r\n    }\r\n\r\n    onChange (event) {\r\n        this.setState({\r\n            message: event.target.value\r\n        })\r\n    }\r\n\r\n    onClick () {\r\n        const { id } = this.props.match.params\r\n\r\n\r\n        if (this.state.message !== \"\") {\r\n            socket.emit(\"message\", {\r\n                from: this.state.currentUser.id,\r\n                to : id ,\r\n                message: this.state.message\r\n            })\r\n            this.setState({ message : \"\"})\r\n        }\r\n        else {\r\n            alert('Ajoutez un message')\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <ul className=\"list-group\">\r\n                        <li class=\"list-group-item active\">Chat avec {this.state.user.first_name}</li>\r\n                        {this.state.messages.length > 0 && this.state.messages.map(msg => {\r\n                            return (\r\n                                <li key={msg.id} className=\"list-group-item\">{msg.message}</li>\r\n                            )               \r\n                        })}\r\n                    </ul>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <input value={this.state.message} name=\"message\" onChange={this.onChange}></input>\r\n                    <button className='btn btn-primary' onClick={() => this.onClick()}> Envoyer !</button>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}